-- Given DDL
IF OBJECT_ID('Sale') IS NOT NULL
DROP TABLE SALE;

IF OBJECT_ID('Product') IS NOT NULL
DROP TABLE PRODUCT;

IF OBJECT_ID('Customer') IS NOT NULL
DROP TABLE CUSTOMER;

IF OBJECT_ID('Location') IS NOT NULL
DROP TABLE LOCATION;

GO

CREATE TABLE CUSTOMER (
    CUSTNAME    NVARCHAR(100),
    CUSTID      INT,
    SALES_YTD   INT,
    STATUS      NVARCHAR(7),
    PRIMARY KEY (CUSTID)
);

CREATE TABLE PRODUCT (
    PRODID          INT,
    PRODNAME        NVARCHAR(100),
    SELLING_PRICE   MONEY,
    SALES_YTD       MONEY,
    PRIMARY KEY (PRODID)
);

CREATE TABLE SALE (
    SALEID      INT,
    CUSTID      INT,
    PRODID      INT,
    QTY         INT,
    PRICE       MONEY,
    SALEDATE    DATE,
    PRIMARY KEY (SALEID),
    FOREIGN KEY (CUSTID) REFERENCES CUSTOMER,
    FOREIGN KEY (PRODID) REFERENCES PRODUCT
);

CREATE TABLE LOCATION (
    LOCID     NVARCHAR(5),
    MINQTY    INTEGER,
    MAXQTY    INTEGER,
    PRIMARY KEY (LOCID),
    CONSTRAINT CHECK_LOCID_LENGTH CHECK (LEN(LOCID) = 5),
    CONSTRAINT CHECK_MINQTY_RANGE CHECK (MINQTY BETWEEN 0 AND 999),
    CONSTRAINT CHECK_MAXQTY_RANGE CHECK (MAXQTY BETWEEN 0 AND 999),
    CONSTRAINT CHECK_MAXQTY_GREATER_MIXQTY CHECK (MAXQTY >= MINQTY)
);

IF OBJECT_ID('SALE_SEQ') IS NOT NULL
DROP SEQUENCE SALE_SEQ;

CREATE SEQUENCE SALE_SEQ;

GO

-- Assignment

-- Stored Procedure 1
IF OBJECT_ID('ADD_CUSTOMER') IS NOT NULL
DROP PROCEDURE ADD_CUSTOMER;

GO

CREATE PROCEDURE ADD_CUSTOMER
    @PCUSTID INT,
    @PCUSTNAME NVARCHAR(100)
AS

    BEGIN

    BEGIN TRY
        IF @PCUSTID < 1 OR @PCUSTID > 499
            THROW 50020, 'Customer ID out of range', 1

        INSERT INTO CUSTOMER(CUSTNAME, CUSTID, SALES_YTD, STATUS)
        VALUES  (@PCUSTNAME, @PCUSTID, 0, 'OK');
    END TRY

    BEGIN CATCH
        IF ERROR_NUMBER() = 2627
            THROW 50010, 'Duplicate customer ID', 1
        ELSE IF ERROR_NUMBER() = 50020
            THROW
        ELSE
            BEGIN
                DECLARE @ERRORMESSAGE NVARCHAR(max) = ERROR_MESSAGE();
                THROW 50000, @ERRORMESSAGE, 1
            END;
    END CATCH;

END;

GO

EXEC ADD_CUSTOMER @PCUSTID = 1, @PCUSTNAME = 'testdude1';
GO
EXEC ADD_CUSTOMER @PCUSTID = 300, @PCUSTNAME = 'testdude2';
GO
EXEC ADD_CUSTOMER @PCUSTID = 1, @PCUSTNAME = 'testdude3';
GO
EXEC ADD_CUSTOMER @PCUSTID = 500, @PCUSTNAME = 'testdude4';
GO

SELECT *
FROM CUSTOMER;

GO

-- Stored Procedure 2
IF OBJECT_ID('DELETE_ALL_CUSTOMERS') IS NOT NULL
DROP PROCEDURE DELETE_ALL_CUSTOMERS;

GO

CREATE PROCEDURE DELETE_ALL_CUSTOMERS AS

    BEGIN
        BEGIN TRY
            DELETE FROM CUSTOMER;
            RETURN @@ROWCOUNT;
        END TRY

        BEGIN CATCH
            DECLARE @ERRORMESSAGE NVARCHAR(max) = ERROR_MESSAGE();
            THROW 50000, @ERRORMESSAGE, 1;
        END CATCH
END;

GO

DECLARE @NUM_ROWS_DELETED INT;
EXEC @NUM_ROWS_DELETED = DELETE_ALL_CUSTOMERS;
SELECT @NUM_ROWS_DELETED;

GO

--Stored Procedure 3
IF OBJECT_ID('ADD_PRODUCT') IS NOT NULL
DROP PROCEDURE ADD_PRODUCT;

GO

CREATE PROCEDURE ADD_PRODUCT
    @PPRODID INT,
    @PPRODNAME NVARCHAR(100),
    @PPRICE MONEY
AS
    BEGIN

    BEGIN TRY
        IF @PPRODID < 1000 OR @PPRODID > 2500
            THROW 50040, 'Product ID out of range', 1

        IF @PPRICE < 0 OR @PPRICE > 99.99
            THROW 50050, 'Price out of range', 1

        INSERT INTO PRODUCT(PRODID, PRODNAME, SELLING_PRICE, SALES_YTD)
        VALUES (@PPRODID, @PPRODNAME, @PPRICE, 0);
    END TRY

    BEGIN CATCH
        IF ERROR_NUMBER() = 2627
            THROW 50010, 'Duplicate customer ID', 1
        ELSE IF ERROR_NUMBER() = 50020
            THROW
        ELSE
            BEGIN
                DECLARE @ERRORMESSAGE NVARCHAR(max) = ERROR_MESSAGE();
                THROW 50000, @ERRORMESSAGE, 1
            END;
    END CATCH
END;

GO

EXEC ADD_PRODUCT @PPRODID = 1000, @PPRODNAME = 'Clothe', @PPRICE = 99;
GO
EXEC ADD_PRODUCT @PPRODID = 2000, @PPRODNAME = 'Pipe', @PPRICE = 64;
GO
EXEC ADD_PRODUCT @PPRODID = 251, @PPRODNAME = 'Lamp', @PPRICE = 82;
GO
EXEC ADD_PRODUCT @PPRODID = 1300, @PPRODNAME = 'Lizard', @PPRICE = 3;
GO
